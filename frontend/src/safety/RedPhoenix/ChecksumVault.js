export function sha1(str){function rotl(n,s){return(n<<s)|(n>>>(32-s))}function tohex(i){return("00000000"+(i>>>0).toString(16)).slice(-8)}const msg=new TextEncoder().encode(str);const ml=msg.length*8;const withOne=new Uint8Array(((msg.length+9+63)&~63));withOne.set(msg);withOne[msg.length]=0x80;const dv=new DataView(withOne.buffer);dv.setUint32(withOne.length-4,ml>>>0);dv.setUint32(withOne.length-8,Math.floor(ml/2**32));let h0=0x67452301,h1=0xEFCDAB89,h2=0x98BADCFE,h3=0x10325476,h4=0xC3D2E1F0;const w=new Uint32Array(80);for(let i=0;i<withOne.length;i+=64){for(let j=0;j<16;j++)w[j]=dv.getUint32(i+j*4);for(let j=16;j<80;j++)w[j]=rotl(w[j-3]^w[j-8]^w[j-14]^w[j-16],1);let a=h0,b=h1,c=h2,d=h3,e=h4;for(let j=0;j<80;j++){const f=j<20?(b&c)|(~b&d):j<40?b^c^d:j<60?(b&c)|(b&d)|(c&d):b^c^d;const k=j<20?0x5A827999:j<40?0x6ED9EBA1:j<60?0x8F1BBCDC:0xCA62C1D6;const t=(rotl(a,5)+f+e+k+w[j])>>>0;e=d;d=c;c=rotl(b,30)>>>0;b=a;a=t}h0=(h0+a)>>>0;h1=(h1+b)>>>0;h2=(h2+c)>>>0;h3=(h3+d)>>>0;h4=(h4+e)>>>0}return tohex(h0)+tohex(h1)+tohex(h2)+tohex(h3)+tohex(h4)}export function createVault(){const store=new Map;return{snapshot(key,value){const json=typeof value==="string"?value:JSON.stringify(value);const hash=sha1(json);store.set(key,{value:JSON.parse(JSON.stringify(value)),sha1:hash});return{key,sha1:hash}},verify(key,value){if(!store.has(key))return{ok:false,reason:"missing"};const json=typeof value==="string"?value:JSON.stringify(value);const hash=sha1(json);const prev=store.get(key).sha1;return{ok:hash===prev,expected:prev,actual:hash}}}}export default{createVault,sha1};