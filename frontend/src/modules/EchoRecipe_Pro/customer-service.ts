import type {
  CustomerProfile,
  ServiceConcept,
  ServiceHours,
  ServiceEvent,
  SeasonalMenu,
  CoverType,
  CompStrategy,
  CompRecord,
} from "@/types/customer-service";

export const MOCK_CUSTOMERS: CustomerProfile[] = [
  {
    id: "cust-001",
    name: "Sarah Mitchell",
    type: "vip",
    email: "sarah.mitchell@email.com",
    phone: "+1-555-0101",
    preferredServiceType: "dine-in",
    dietaryRestrictions: ["vegetarian"],
    allergies: ["shellfish"],
    preferredMenuItems: ["rec-pan-sear-scallops", "rec-herb-roasted-chicken"],
    notes: "Monthly regular, prefers table 4 with a view",
    createdAt: Date.now() - 365 * 24 * 60 * 60 * 1000,
    updatedAt: Date.now(),
  },
  {
    id: "cust-002",
    name: "James & Associates",
    type: "corporate",
    email: "events@jamesassoc.com",
    phone: "+1-555-0102",
    preferredServiceType: "catering",
    dietaryRestrictions: [],
    allergies: [],
    preferredMenuItems: [],
    notes: "Books private events, typical 50-100 pax",
    createdAt: Date.now() - 180 * 24 * 60 * 60 * 1000,
    updatedAt: Date.now(),
  },
  {
    id: "cust-003",
    name: "The Wilson Party",
    type: "group",
    email: "wilson.event@email.com",
    phone: "+1-555-0103",
    preferredServiceType: "dine-in",
    dietaryRestrictions: ["gluten-free"],
    allergies: ["peanut", "tree-nut"],
    preferredMenuItems: [],
    notes: "Annual celebration group, typically 12 people",
    createdAt: Date.now() - 90 * 24 * 60 * 60 * 1000,
    updatedAt: Date.now(),
  },
  {
    id: "cust-004",
    name: "Michael Chen",
    type: "individual",
    email: "m.chen@email.com",
    phone: "+1-555-0104",
    preferredServiceType: "takeout",
    dietaryRestrictions: [],
    allergies: ["dairy"],
    preferredMenuItems: ["rec-grilled-vegetables", "rec-fish-special"],
    notes: "Frequent weekday lunch visitor",
    createdAt: Date.now() - 60 * 24 * 60 * 60 * 1000,
    updatedAt: Date.now(),
  },
];

export const MOCK_SERVICE_CONCEPTS: ServiceConcept[] = [
  {
    id: "svc-fine-dining",
    name: "Fine Dining",
    description: "Upscale tasting menu experience with wine pairings",
    serviceType: "dine-in",
    capacity: 40,
    averageCheckSize: 185.0,
    seatingTime: 180,
    serviceLevel: "premium",
    allowedPaymentMethods: ["card", "cash", "check"],
    enabled: true,
    createdAt: Date.now() - 365 * 24 * 60 * 60 * 1000,
    updatedAt: Date.now(),
  },
  {
    id: "svc-casual-dining",
    name: "Casual Dining",
    description: "Relaxed atmosphere with full menu service",
    serviceType: "dine-in",
    capacity: 120,
    averageCheckSize: 45.0,
    seatingTime: 90,
    serviceLevel: "standard",
    allowedPaymentMethods: ["card", "cash"],
    enabled: true,
    createdAt: Date.now() - 365 * 24 * 60 * 60 * 1000,
    updatedAt: Date.now(),
  },
  {
    id: "svc-counter-service",
    name: "Counter Service",
    description: "Quick service, order at counter",
    serviceType: "takeout",
    capacity: 50,
    averageCheckSize: 18.0,
    seatingTime: 20,
    serviceLevel: "quick",
    allowedPaymentMethods: ["card", "cash"],
    enabled: true,
    createdAt: Date.now() - 365 * 24 * 60 * 60 * 1000,
    updatedAt: Date.now(),
  },
  {
    id: "svc-catering",
    name: "Private Catering",
    description: "Off-premise catering and events",
    serviceType: "catering",
    capacity: 500,
    averageCheckSize: 75.0,
    seatingTime: 120,
    serviceLevel: "premium",
    allowedPaymentMethods: ["card", "check"],
    enabled: true,
    createdAt: Date.now() - 365 * 24 * 60 * 60 * 1000,
    updatedAt: Date.now(),
  },
];

export const MOCK_SERVICE_HOURS: ServiceHours[] = [
  {
    id: "hrs-fd-tue",
    serviceConcptId: "svc-fine-dining",
    dayOfWeek: "tuesday",
    openTime: "17:00",
    closeTime: "23:00",
    isOpen: true,
    seatingCutoff: "21:30",
  },
  {
    id: "hrs-fd-wed",
    serviceConcptId: "svc-fine-dining",
    dayOfWeek: "wednesday",
    openTime: "17:00",
    closeTime: "23:00",
    isOpen: true,
    seatingCutoff: "21:30",
  },
  {
    id: "hrs-fd-thu",
    serviceConcptId: "svc-fine-dining",
    dayOfWeek: "thursday",
    openTime: "17:00",
    closeTime: "23:00",
    isOpen: true,
    seatingCutoff: "21:30",
  },
  {
    id: "hrs-fd-fri",
    serviceConcptId: "svc-fine-dining",
    dayOfWeek: "friday",
    openTime: "17:00",
    closeTime: "23:59",
    isOpen: true,
    seatingCutoff: "22:00",
  },
  {
    id: "hrs-fd-sat",
    serviceConcptId: "svc-fine-dining",
    dayOfWeek: "saturday",
    openTime: "17:00",
    closeTime: "23:59",
    isOpen: true,
    seatingCutoff: "22:00",
  },
  {
    id: "hrs-cd-mon",
    serviceConcptId: "svc-casual-dining",
    dayOfWeek: "monday",
    openTime: "11:00",
    closeTime: "22:00",
    isOpen: true,
  },
  {
    id: "hrs-cd-sun",
    serviceConcptId: "svc-casual-dining",
    dayOfWeek: "sunday",
    openTime: "10:00",
    closeTime: "21:00",
    isOpen: true,
  },
  {
    id: "hrs-cs-mon",
    serviceConcptId: "svc-counter-service",
    dayOfWeek: "monday",
    openTime: "07:00",
    closeTime: "19:00",
    isOpen: true,
  },
];

export const MOCK_SERVICE_EVENTS: ServiceEvent[] = [
  {
    id: "evt-001",
    serviceConcptId: "svc-fine-dining",
    name: "Chef's Tasting Menu - 2024-12-15",
    description: "Special 7-course tasting menu with wine pairings",
    eventType: "special",
    date: Date.now() + 7 * 24 * 60 * 60 * 1000,
    duration: 180,
    expectedCovers: 40,
    confirmedCovers: 38,
    customers: ["cust-001", "cust-003"],
    status: "confirmed",
    createdAt: Date.now() - 30 * 24 * 60 * 60 * 1000,
    updatedAt: Date.now(),
  },
  {
    id: "evt-002",
    serviceConcptId: "svc-catering",
    name: "Corporate Gala - Morrison Inc",
    description: "Black-tie catering event",
    eventType: "catering",
    date: Date.now() + 14 * 24 * 60 * 60 * 1000,
    duration: 240,
    expectedCovers: 150,
    customers: ["cust-002"],
    status: "planned",
    createdAt: Date.now() - 45 * 24 * 60 * 60 * 1000,
    updatedAt: Date.now(),
  },
  {
    id: "evt-003",
    serviceConcptId: "svc-casual-dining",
    name: "Saturday Dinner Service",
    eventType: "regular",
    date: Date.now() + 1 * 24 * 60 * 60 * 1000,
    duration: 300,
    expectedCovers: 90,
    customers: [],
    status: "planned",
    createdAt: Date.now() - 2 * 24 * 60 * 60 * 1000,
    updatedAt: Date.now(),
  },
];

export const MOCK_COVER_TYPES: CoverType[] = [
  {
    id: "cover-lunch",
    serviceConcptId: "svc-casual-dining",
    name: "Lunch",
    sequenceInMenu: 1,
    expectedPricePoint: 18.0,
    profitTargetPercent: 65,
    costTargetPercent: 35,
    platingStandard: "Casual, single plate",
  },
  {
    id: "cover-dinner",
    serviceConcptId: "svc-casual-dining",
    name: "Dinner",
    sequenceInMenu: 2,
    expectedPricePoint: 48.0,
    profitTargetPercent: 62,
    costTargetPercent: 38,
    platingStandard: "Standard plating",
  },
  {
    id: "cover-fd-course1",
    serviceConcptId: "svc-fine-dining",
    name: "Course 1: Amuse",
    sequenceInMenu: 1,
    expectedPricePoint: 0,
    profitTargetPercent: 100,
    costTargetPercent: 0,
    platingStandard: "Artistic, single bite",
  },
  {
    id: "cover-fd-course7",
    serviceConcptId: "svc-fine-dining",
    name: "Course 7: Dessert",
    sequenceInMenu: 7,
    expectedPricePoint: 25.0,
    profitTargetPercent: 70,
    costTargetPercent: 30,
    platingStandard: "Elevated plating with garnish",
  },
];

export const MOCK_COMP_STRATEGIES: CompStrategy[] = [
  {
    id: "comp-vip",
    serviceConcptId: "svc-fine-dining",
    name: "VIP Complimentary Course",
    triggerCondition: "vip",
    applicableCovers: ["cover-fd-course1"],
    maxCompValue: 0,
    compFrequency: "per-shift",
    requiresApproval: false,
    description: "Complimentary amuse for VIP customers",
  },
  {
    id: "comp-complaint",
    serviceConcptId: "svc-casual-dining",
    name: "Service Recovery",
    triggerCondition: "complaint",
    applicableCovers: ["cover-lunch", "cover-dinner"],
    maxCompValue: 50.0,
    compFrequency: "per-shift",
    requiresApproval: true,
    approverRole: "manager",
    description: "Comp for service or quality issues",
  },
  {
    id: "comp-milestone",
    serviceConcptId: "svc-fine-dining",
    name: "Anniversary Celebration",
    triggerCondition: "customer-milestone",
    applicableCovers: ["cover-fd-course7"],
    maxCompValue: 25.0,
    compFrequency: "per-shift",
    requiresApproval: false,
    description: "Complimentary dessert for special occasions",
  },
];

export const MOCK_COMP_RECORDS: CompRecord[] = [
  {
    id: "comp-rec-001",
    strategyId: "comp-vip",
    eventId: "evt-001",
    customerId: "cust-001",
    recipeId: "rec-amuse-bouche",
    costValue: 8.5,
    reason: "VIP guest",
    timestamp: Date.now() - 5 * 24 * 60 * 60 * 1000,
  },
  {
    id: "comp-rec-002",
    strategyId: "comp-complaint",
    eventId: "evt-003",
    recipeId: "rec-dessert-special",
    costValue: 12.0,
    reason: "Long wait time for entree",
    approvedBy: "staff-001",
    timestamp: Date.now() - 2 * 24 * 60 * 60 * 1000,
  },
];

export const MOCK_SEASONAL_MENUS: SeasonalMenu[] = [
  {
    id: "seasonal-summer-2024",
    season: "summer",
    year: 2024,
    startDate: Date.now(),
    endDate: Date.now() + 90 * 24 * 60 * 60 * 1000,
    baseMenuId: "menu-casual-dining",
    modifications: [
      {
        type: "add",
        recipeId: "rec-gazpacho",
        reason: "Summer seasonal special",
      },
      {
        type: "remove",
        recipeId: "rec-beef-stew",
        reason: "Heavy winter dish",
      },
      {
        type: "adjust-price",
        recipeId: "rec-grilled-vegetables",
        newPrice: 16.0,
        reason: "Peak produce season, lower cost",
      },
    ],
    notes: "Focus on fresh, light dishes and cold preparations",
    active: true,
    createdAt: Date.now() - 60 * 24 * 60 * 60 * 1000,
    updatedAt: Date.now(),
  },
];
