export const DEFAULT_WEIGHTS={acidity_match:1.3,salt_vs_acid:1.0,fat_vs_tannin:1.2,sweet_vs_heat:1.4,umami_penalty:-0.8,intensity_match:1.1,aromatic_bridge:0.9};const c=(n,min=0,max=4)=>Math.min(max,Math.max(min,Number(n)||0));export function score(food,wine,weights={}){const W={...DEFAULT_WEIGHTS,...weights};const acidity_match=1-Math.abs(c(food.acid)-c(wine.acidity))/4;const salt_vs_acid=c(food.salt)*(c(wine.acidity)/4);const fat_vs_tannin=c(food.fat)*(c(wine.tannin)/4);const sweet_vs_heat=c(food.spice)*(c(wine.sugar)/4);const umami_penalty=c(food.umami)*(c(wine.tannin)/4);const intensity_match=1-Math.abs(c(food.intensity)-Math.max(c(wine.alcohol),c(wine.tannin)))/4;const shared=new Set((food.aromas||[]).filter(a=>(wine.aromas||[]).includes(a)));const aromatic_bridge=Math.min(1,shared.size/3);let raw=W.acidity_match*acidity_match+W.salt_vs_acid*salt_vs_acid+W.fat_vs_tannin*fat_vs_tannin+W.sweet_vs_heat*sweet_vs_heat+W.umami_penalty*umami_penalty*-1+W.intensity_match*intensity_match+W.aromatic_bridge*aromatic_bridge;raw=Math.max(0,Math.min(1.8,raw));return Math.round(raw/1.8*100)}export function rank(food,wines,weights){return[...wines].map(w=>({wine:w,score:score(food,w,weights)})).sort((a,b)=>b.score-a.score)}export default{score,rank};
export default DEFAULT_WEIGHTS;
